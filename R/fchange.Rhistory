2*8
x <- 3*23
x
vector <- c(8, 98, 78)
vector
mylist = list(name="fuck Head", wife="None", vector)
mylist
mylist$wife
setwd("~/GitHub/SmartCity/R")
TestFile <- read.csv(file="14_November12.csv", header=TRUE, sep=",")
TestFile
summary(TestFile)
help(read.csv)
View(TestFile)
File = Test$Difference
File = TestFile$Difference
File
df <- subset(TestFile, select = -c(Entries,Exits))
df
df.head()
head(df)
Cseries = msts(df, seasonal.periods=c(48, 336), ts.frequency=48)
install.packages("forecast")
library("forecast", lib.loc="~/R/win-library/3.2")
detach("package:forecast", unload=TRUE)
library("forecast", lib.loc="~/R/win-library/3.2")
Cseries = msts(df, seasonal.periods=c(48, 336), ts.frequency=48)
plot.Cseries
plot.msts(Cseries)
tsdisplay(Cseries)
plot.ts(df)
dfseries = ts(df)
dfseries
df
head(df)
dates = as.POSIXct(strptime(paste(df[,1], sep=" "),format="%Y-%m-%d %H:%M:%S"))
dates
head(df)
data = xts(df[,c(2)], order.by=dates)
install.packages("xts")
library("xts", lib.loc="~/R/win-library/3.2")
data = xts(df[,c(2)], order.by=dates)
data
dataseries=ts(data)
dataseries
plot.ts(dataseries)
head(dataseries)
savehistory("~/GitHub/SmartCity/R/first.Rhistory")
now = Sys.time()
now
as.POSIXlt(now)
str(as.POSIXlt(now))
head(df)
Head(TestFile)
head(TestFile)
z <- read.zoo(file = "14_November12.csv", header=TRUE, format = "%Y-%m-%dT%H:%M:%OS%z", tz = "GMT")
z <- read.zoo(file = "14_November12.csv", header=TRUE, format = "%Y-%m-%d %H:%M:%S", tz = "GMT")
z <- read.zoo(file = "14_November12.csv", header=TRUE, format = "%Y-%m-%d %H:%M:%S", tz = "GMT")
z <- read.zoo(file = "14_November12.csv", header=TRUE, format = "%Y-%m-%d %H:%M:%S", tz = "GMT")
z <- read.zoo(file = "14_November12.csv", header=TRUE, format = "%Y-%m-%d %H:%M:%S", tz = "GMT", index=1)
head(df)
df$X <- as.POSIXct(df$X, format="%Y-%m-%d %H:%M:%S")
head(df)
df
df$X
View(df)
type(df)
View(df)
attributes(df)
savehistory("~/GitHub/SmartCity/R/first.Rhistory")
help(read.zoo)
help(zoo)
help(??zoo)
setwd("~/GitHub/SmartCity/R")
df = read.zoo(file="14_November12", header=TRUE, format="%Y-%m-%d %H:%M:%S", tz="GMT")
library("zoo", lib.loc="~/R/win-library/3.2")
library("zoo", lib.loc="~/R/win-library/3.2")
df = read.zoo(file="14_November12", header=TRUE, format="%Y-%m-%d %H:%M:%S", tz="GMT")
df = read.zoo(file="14_November12.csv", header=TRUE, format="%Y-%m-%d %H:%M:%S", tz="GMT")
df = read.zoo(file="14_November12.csv", sep=",", header=TRUE, format="%Y-%m-%d %H:%M:%S", tz="GMT")
df = read.zoo(file="14_November12.csv", sep=",", header=TRUE, format="%Y/%m/%d %H:%M", tz="GMT")
df = read.zoo(file="14_November12.csv", sep=",", header=TRUE, format="%d/%m/%Y %H:%M", tz="GMT")
head(df)
sumary(df)
summary(df)
ts.plot(df)
dfseries = msts(df, seasonal.period=c(48,336), ts.frequency=48)
dfseries = forecast.msts(df, seasonal.period=c(48,336), ts.frequency=48)
library("forecast", lib.loc="~/R/win-library/3.2")
dfseries = msts(df, seasonal.period=c(48,336), ts.frequency=48)
fit tbats(df)
fit tbats(dfseries)
fit <- tbats(dfseries)
for = forecast(fit)
for <- forecast(fit)
plot(fit)
dfseries = msts(df, seasonal.period=c(48,336), ts.frequency=48, start=c(01,11,2012))
fit tbats(dfseries)
fit <- tbats(dfseries)
plot(fit)
plot(dfseriee)
plot(dfseries)
plot(dfseries)
dfsComponents <- decompose(dfseries)
dfsComponents$seasonal
plot(dfsComponents$seasonal)
dfsSeasonalityRemoved <-dfseries-dfsComponents$seasonal
plot(dfsSeasonalityRemoved)
plot(fit)
fit1<- auto.arima(dfseries)
fcast <- forecast(fit1)
plot(fcast)
acf(dfseries)
acf(dfseries, lag.max = 1000)
acf(dfseries, lag.max = 100)
acf(dfseries, lag.max = 48)
acf(dfseries, lag.max = 400)
plot(dfseries)
plot(diff(dfseries))
plot(diff(dfseries, difference=2))
plot(diff(dfseries, difference=))
plot(dfseries)
plot(dfsSeasonalityRemoved)
acf(dfsSeasonalityRemoved)
acf(diff(dfsSeasonalityRemoved, difference=1))
acf(diff(dfsSeasonalityRemoved, difference=2))
acf(diff(dfsSeasonalityRemoved, difference=2), lag.max = 400)
pacf(diff(dfsSeasonalityRemoved, difference=2))
acf(diff(dfsSeasonalityRemoved, difference=2), lag.max = 400)
plot(diff(dfsSeasonalityRemoved, difference=2))
savehistory("~/GitHub/SmartCity/R/fchange.Rhistory")
